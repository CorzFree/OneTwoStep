{"version":3,"sources":["../../../../../assets/common/script/assets/common/script/uiGamePanel.js"],"names":["mvs","require","GLB","cc","Class","extends","properties","bgm","default","url","AudioClip","loseClip","winClip","leadSpFrame","SpriteFrame","backWardSpFrame","stepSpTag","Sprite","stepLb","Label","stepThreshold","selfIcon","Node","rivalIcon","onLoad","_super","isGameOverPlay","bgmId","audioEngine","play","clientEvent","on","eventType","gameOver","roundStart","leaveRoomNotify","leaveRoom","getComponent","setData","id","playerUserIds","nodeDict","exit","data","Game","GameManager","gameState","GameState","Over","uiFunc","openUI","obj","uiTip","leaveRoomInfo","userId","userInfo","bind","Animation","AudioSource","stop","update","Play","Pause","PlayerManager","player","rival","stepDif","jumpRecordId","Math","abs","node","active","spriteFrame","string","onDestroy","off"],"mappings":";;;;;;AAAA,IAAIA,MAAMC,QAAQ,SAAR,CAAV;AACA,IAAIC,MAAMD,QAAQ,KAAR,CAAV;AACAE,GAAGC,KAAH,CAAS;AACLC,aAASJ,QAAQ,SAAR,CADJ;;AAGLK,gBAAY;AACRC,aAAK;AACDC,qBAAS,IADR;AAEDC,iBAAKN,GAAGO;AAFP,SADG;AAKRC,kBAAU;AACNH,qBAAS,IADH;AAENC,iBAAKN,GAAGO;AAFF,SALF;AASRE,iBAAS;AACLJ,qBAAS,IADJ;AAELC,iBAAKN,GAAGO;AAFH,SATD;AAaRG,qBAAaV,GAAGW,WAbR;AAcRC,yBAAiBZ,GAAGW,WAdZ;AAeRE,mBAAWb,GAAGc,MAfN;AAgBRC,gBAAQf,GAAGgB,KAhBH;AAiBRC,uBAAe,CAjBP;AAkBRC,kBAAUlB,GAAGmB,IAlBL;AAmBRC,mBAAWpB,GAAGmB;AAnBN,KAHP;;AAyBLE,UAzBK,oBAyBI;AACL,aAAKC,MAAL;AACA,aAAKC,cAAL,GAAsB,KAAtB;AACA,aAAKC,KAAL,GAAaxB,GAAGyB,WAAH,CAAeC,IAAf,CAAoB,KAAKtB,GAAzB,EAA8B,IAA9B,EAAoC,GAApC,CAAb;AACAuB,oBAAYC,EAAZ,CAAeD,YAAYE,SAAZ,CAAsBC,QAArC,EAA+C,KAAKA,QAApD,EAA8D,IAA9D;AACAH,oBAAYC,EAAZ,CAAeD,YAAYE,SAAZ,CAAsBE,UAArC,EAAiD,KAAKA,UAAtD,EAAkE,IAAlE;AACAJ,oBAAYC,EAAZ,CAAeD,YAAYE,SAAZ,CAAsBG,eAArC,EAAsD,KAAKC,SAA3D,EAAsE,IAAtE;AACA,aAAKf,QAAL,CAAcgB,YAAd,CAA2B,YAA3B,EAAyCC,OAAzC,CAAiD,EAACC,IAAIrC,IAAIsC,aAAJ,CAAkB,CAAlB,CAAL,EAAjD;AACA,aAAKjB,SAAL,CAAec,YAAf,CAA4B,YAA5B,EAA0CC,OAA1C,CAAkD,EAACC,IAAIrC,IAAIsC,aAAJ,CAAkB,CAAlB,CAAL,EAAlD;AACA,aAAKC,QAAL,CAAc,MAAd,EAAsBV,EAAtB,CAAyB,OAAzB,EAAkC,KAAKW,IAAvC,EAA6C,IAA7C;AACH,KAnCI;AAqCLN,aArCK,qBAqCKO,IArCL,EAqCW;AACZ,YAAIC,KAAKC,WAAL,CAAiBC,SAAjB,KAA+BC,UAAUC,IAA7C,EAAmD;AAC/CC,mBAAOC,MAAP,CAAc,OAAd,EAAuB,UAASC,GAAT,EAAc;AACjC,oBAAIC,QAAQD,IAAId,YAAJ,CAAiB,OAAjB,CAAZ;AACA,oBAAIe,KAAJ,EAAW;AACP,wBAAIT,KAAKU,aAAL,CAAmBC,MAAnB,KAA8BpD,IAAIqD,QAAJ,CAAahB,EAA/C,EAAmD;AAC/Ca,8BAAMd,OAAN,CAAc,SAAd;AACH;AACJ;AACJ,aAPsB,CAOrBkB,IAPqB,CAOhB,IAPgB,CAAvB;AAQH;AACJ,KAhDI;AAkDLd,QAlDK,kBAkDE;AACHO,eAAOC,MAAP,CAAc,QAAd;AACH,KApDI;AAsDLhB,cAtDK,wBAsDQ;AACT,aAAKO,QAAL,CAAc,SAAd,EAAyBJ,YAAzB,CAAsClC,GAAGsD,SAAzC,EAAoD5B,IAApD;AACA,aAAKY,QAAL,CAAc,SAAd,EAAyBJ,YAAzB,CAAsClC,GAAGuD,WAAzC,EAAsD7B,IAAtD;AACH,KAzDI;AA2DLI,YA3DK,sBA2DM;AACP,YAAI,CAAC,KAAKP,cAAV,EAA0B;AACtB,iBAAKA,cAAL,GAAsB,IAAtB;AACAvB,eAAGyB,WAAH,CAAe+B,IAAf,CAAoB,KAAKhC,KAAzB;AACA,iBAAKc,QAAL,CAAc,UAAd,EAA0BJ,YAA1B,CAAuClC,GAAGsD,SAA1C,EAAqD5B,IAArD;AACA,iBAAKY,QAAL,CAAc,UAAd,EAA0BJ,YAA1B,CAAuClC,GAAGuD,WAA1C,EAAuD7B,IAAvD;AACH;AACJ,KAlEI;AAoEL+B,UApEK,oBAoEI;AACL,YAAI,CAAChB,KAAKC,WAAL,CAAiBC,SAAjB,KAA+BC,UAAUc,IAAzC,IAAiDjB,KAAKC,WAAL,CAAiBC,SAAjB,KAA+BC,UAAUe,KAA3F,KACGlB,KAAKmB,aADR,IACyBnB,KAAKmB,aAAL,CAAmBC,MAD5C,IACsDpB,KAAKmB,aAAL,CAAmBE,KAD7E,EACoF;AAChF,gBAAIC,UAAUtB,KAAKmB,aAAL,CAAmBC,MAAnB,CAA0BG,YAA1B,GAAyCvB,KAAKmB,aAAL,CAAmBE,KAAnB,CAAyBE,YAAhF;AACA,gBAAIC,KAAKC,GAAL,CAASH,OAAT,IAAoB,KAAK9C,aAA7B,EAA4C;AACxC,qBAAKJ,SAAL,CAAesD,IAAf,CAAoBC,MAApB,GAA6B,IAA7B;AACA,oBAAIL,UAAU,CAAd,EAAiB;AACb,yBAAKlD,SAAL,CAAewD,WAAf,GAA6B,KAAKzD,eAAlC;AACH,iBAFD,MAEO;AACH,yBAAKC,SAAL,CAAewD,WAAf,GAA6B,KAAK3D,WAAlC;AACH;AACD,qBAAKK,MAAL,CAAYuD,MAAZ,GAAqBL,KAAKC,GAAL,CAASH,OAAT,CAArB;AACH,aARD,MAQO;AACH,qBAAKlD,SAAL,CAAesD,IAAf,CAAoBC,MAApB,GAA6B,KAA7B;AACH;AACJ;AACJ,KApFI;AAsFLG,aAtFK,uBAsFO;AACRvE,WAAGyB,WAAH,CAAe+B,IAAf,CAAoB,KAAKhC,KAAzB;AACAG,oBAAY6C,GAAZ,CAAgB7C,YAAYE,SAAZ,CAAsBC,QAAtC,EAAgD,KAAKA,QAArD,EAA+D,IAA/D;AACAH,oBAAY6C,GAAZ,CAAgB7C,YAAYE,SAAZ,CAAsBE,UAAtC,EAAkD,KAAKA,UAAvD,EAAmE,IAAnE;AACAJ,oBAAY6C,GAAZ,CAAgB7C,YAAYE,SAAZ,CAAsBG,eAAtC,EAAuD,KAAKC,SAA5D,EAAuE,IAAvE;AAEH;AA5FI,CAAT","file":"uiGamePanel.js","sourceRoot":"../../../../../assets/common/script","sourcesContent":["var mvs = require(\"Matchvs\");\nvar GLB = require(\"Glb\");\ncc.Class({\n    extends: require(\"uiPanel\"),\n\n    properties: {\n        bgm: {\n            default: null,\n            url: cc.AudioClip\n        },\n        loseClip: {\n            default: null,\n            url: cc.AudioClip\n        },\n        winClip: {\n            default: null,\n            url: cc.AudioClip\n        },\n        leadSpFrame: cc.SpriteFrame,\n        backWardSpFrame: cc.SpriteFrame,\n        stepSpTag: cc.Sprite,\n        stepLb: cc.Label,\n        stepThreshold: 0,\n        selfIcon: cc.Node,\n        rivalIcon: cc.Node\n    },\n\n    onLoad() {\n        this._super();\n        this.isGameOverPlay = false;\n        this.bgmId = cc.audioEngine.play(this.bgm, true, 0.5);\n        clientEvent.on(clientEvent.eventType.gameOver, this.gameOver, this);\n        clientEvent.on(clientEvent.eventType.roundStart, this.roundStart, this);\n        clientEvent.on(clientEvent.eventType.leaveRoomNotify, this.leaveRoom, this);\n        this.selfIcon.getComponent('playerIcon').setData({id: GLB.playerUserIds[0]});\n        this.rivalIcon.getComponent('playerIcon').setData({id: GLB.playerUserIds[1]});\n        this.nodeDict[\"exit\"].on(\"click\", this.exit, this);\n    },\n\n    leaveRoom(data) {\n        if (Game.GameManager.gameState !== GameState.Over) {\n            uiFunc.openUI(\"uiTip\", function(obj) {\n                var uiTip = obj.getComponent(\"uiTip\");\n                if (uiTip) {\n                    if (data.leaveRoomInfo.userId !== GLB.userInfo.id) {\n                        uiTip.setData(\"对手离开了游戏\");\n                    }\n                }\n            }.bind(this));\n        }\n    },\n\n    exit() {\n        uiFunc.openUI(\"uiExit\");\n    },\n\n    roundStart() {\n        this.nodeDict['readyGo'].getComponent(cc.Animation).play();\n        this.nodeDict['readyGo'].getComponent(cc.AudioSource).play();\n    },\n\n    gameOver() {\n        if (!this.isGameOverPlay) {\n            this.isGameOverPlay = true;\n            cc.audioEngine.stop(this.bgmId);\n            this.nodeDict['gameOver'].getComponent(cc.Animation).play();\n            this.nodeDict['gameOver'].getComponent(cc.AudioSource).play();\n        }\n    },\n\n    update() {\n        if ((Game.GameManager.gameState === GameState.Play || Game.GameManager.gameState === GameState.Pause)\n            && Game.PlayerManager && Game.PlayerManager.player && Game.PlayerManager.rival) {\n            var stepDif = Game.PlayerManager.player.jumpRecordId - Game.PlayerManager.rival.jumpRecordId;\n            if (Math.abs(stepDif) > this.stepThreshold) {\n                this.stepSpTag.node.active = true;\n                if (stepDif < 0) {\n                    this.stepSpTag.spriteFrame = this.backWardSpFrame;\n                } else {\n                    this.stepSpTag.spriteFrame = this.leadSpFrame;\n                }\n                this.stepLb.string = Math.abs(stepDif);\n            } else {\n                this.stepSpTag.node.active = false;\n            }\n        }\n    },\n\n    onDestroy() {\n        cc.audioEngine.stop(this.bgmId);\n        clientEvent.off(clientEvent.eventType.gameOver, this.gameOver, this);\n        clientEvent.off(clientEvent.eventType.roundStart, this.roundStart, this);\n        clientEvent.off(clientEvent.eventType.leaveRoomNotify, this.leaveRoom, this);\n\n    }\n\n});\n"]}